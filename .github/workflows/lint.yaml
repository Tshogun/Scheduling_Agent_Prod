name: Frontend Lint

on:
  pull_request:
    branches: [ '**' ]  # Run on PRs to any branch

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/frontend/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/frontend/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.5.1'
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: nuxt

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            dist
            .nuxt
          key: ${{ runner.os }}-nuxt-build-${{ hashFiles('frontend/dist/**') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-build-

      - name: Debug working directory and files
        run: |
          pwd
          ls -la frontend
          ls -la frontend/node_modules || echo "No node_modules yet"

      - name: Install dependencies
        working-directory: frontend
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Static HTML export with Nuxt
        working-directory: frontend
        run: ${{ steps.detect-package-manager.outputs.manager }} run generate

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/dist

  lint-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.5.1'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
